api:
    name: "github"
    description: "GitHub github_eventsset from github.demo.altinity.cloud"
    version: "0.2"

database:
    type: clickhouse
    connection: clickhouse://github.demo.altinity.cloud:9440/default?username=demo&password=demo&secure=true
    endpoints:
        - group: github_events
          http_method: GET
          http_path: /github_events/{event_type}/{repo_name}/{created_at}/{action}
          mcp_method: get_record_by_primary_key
          summary: Retrieve a single record by composite primary key
          description: 'This endpoint retrieves a single github_events record using its composite primary key (event_type, repo_name, created_at, action). Example: GET /github_events/CommitCommentEvent/my_repo/1970-01-01T00:00:00Z/none'
          query: SELECT * FROM github_events WHERE event_type = :event_type AND repo_name = :repo_name AND created_at = :created_at AND action = :action LIMIT 1
          is_array_result: false
          params:
            - name: event_type
              type: string
              location: path
              required: true
            - name: repo_name
              type: string
              location: path
              required: true
            - name: created_at
              type: string
              location: path
              required: true
            - name: action
              type: string
              location: path
              required: true
        - group: github_events
          http_method: GET
          http_path: /github_events
          mcp_method: list_records
          summary: List records with pagination
          description: 'This endpoint returns a paginated list of github_events records. Example: GET /github_events?offset=0&limit=10'
          query: SELECT * FROM github_events ORDER BY created_at DESC LIMIT :limit OFFSET :offset
          is_array_result: true
          params:
            - name: offset
              type: number
              location: query
              required: true
              default: 0
            - name: limit
              type: number
              location: query
              required: true
              default: 10
        - group: github_events
          http_method: GET
          http_path: /github_events/count
          mcp_method: get_total_count
          summary: Retrieve total count of records
          description: 'This endpoint returns the total count of github_events records for pagination purposes. Example: GET /github_events/count'
          query: SELECT count() as total_count FROM github_events LIMIT 1
          is_array_result: false
          params: []
        - group: github_events
          http_method: GET
          http_path: /github_events/actor/{actor_login}
          mcp_method: list_records_by_actor
          summary: List records filtered by actor with pagination
          description: 'This endpoint retrieves github_events records for a specified actor with pagination. Example: GET /github_events/actor/johndoe?offset=0&limit=10'
          query: SELECT * FROM github_events WHERE actor_login = :actor_login ORDER BY created_at DESC LIMIT :limit OFFSET :offset
          is_array_result: true
          params:
            - name: actor_login
              type: string
              location: path
              required: true
            - name: offset
              type: number
              location: query
              required: true
              default: 0
            - name: limit
              type: number
              location: query
              required: true
              default: 10
        - group: github_events
          http_method: GET
          http_path: /github_events/repo/{repo_name}
          mcp_method: list_records_by_repo
          summary: List records filtered by repository with pagination
          description: 'This endpoint retrieves github_events records for a specified repository with pagination. Example: GET /github_events/repo/my_repo?offset=0&limit=10'
          query: SELECT * FROM github_events WHERE repo_name = :repo_name ORDER BY created_at DESC LIMIT :limit OFFSET :offset
          is_array_result: true
          params:
            - name: repo_name
              type: string
              location: path
              required: true
            - name: offset
              type: number
              location: query
              required: true
              default: 0
            - name: limit
              type: number
              location: query
              required: true
              default: 10
        - group: github_events
          http_method: GET
          http_path: /github_events/repo/{repo_name}/stats
          mcp_method: get_repo_stats
          summary: Get aggregated repository statistics
          description: 'This endpoint returns aggregated statistics for a specific repository, including total additions, deletions, and commits. Example: GET /github_events/repo/my_repo/stats'
          query: SELECT sum(additions) as total_additions, sum(deletions) as total_deletions, sum(commits) as total_commits FROM github_events WHERE repo_name = :repo_name LIMIT 1
          is_array_result: false
          params:
            - name: repo_name
              type: string
              location: path
              required: true
        - group: github_events
          http_method: GET
          http_path: /github_events/date_range
          mcp_method: list_records_by_date_range
          summary: List records within a date range with pagination
          description: 'This endpoint retrieves github_events records created between a start and end date with pagination. Example: GET /github_events/date_range?start_date=1970-01-01T00:00:00Z&end_date=1970-01-02T00:00:00Z&offset=0&limit=10'
          query: SELECT * FROM github_events WHERE created_at BETWEEN :start_date AND :end_date ORDER BY created_at DESC LIMIT :limit OFFSET :offset
          is_array_result: true
          params:
            - name: start_date
              type: string
              location: query
              required: true
            - name: end_date
              type: string
              location: query
              required: true
            - name: offset
              type: number
              location: query
              required: true
              default: 0
            - name: limit
              type: number
              location: query
              required: true
              default: 10
    tables: []
plugins:
  oauth:
    provider: "auth0"
    user_info_url: "https://altinity.auth0.com/userinfo"
    # use --set plugins.oauth.client_id=XXX,plugins.oauth.client_secret=YYYY during `helm upgrade` for properly install
    scopes:
      - "openid"
      - "profile"
      - "email"
    redirect_url: "https://mcp-github.altinity-skaeser-playground.dev.altinity.cloud/oauth/callback"  # OAuth callback URL
    auth_url: "/oauth/authorize" # Gateway's authorization endpoint (optional)
    callback_url: "/oauth/callback" # Gateway's callback endpoint (optional)

