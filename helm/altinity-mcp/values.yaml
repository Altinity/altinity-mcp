# Default values for altinity-mcp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of replicas to deploy
replicaCount: 1

image:
  # -- Container image repository
  repository: ghcr.io/altinity/altinity-mcp
  # -- Container image pull policy
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

# -- Pull secrets for private images
imagePullSecrets: []
# -- Override the name of the chart
nameOverride: ""
# -- Override the full name of the chart
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Pod annotations
podAnnotations: {}

# -- Pod security context
podSecurityContext: {}
  # fsGroup: 2000

# -- Container security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Service type
  type: ClusterIP
  # -- Service port
  port: 8080
  # -- Service annotations
  annotations: {}

ingress:
  # -- Enable ingress controller resource
  enabled: false
  # -- Ingress class name
  className: ""
  # -- Ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    # -- Ingress host
    - host: chart-example.local
      paths:
        # -- Ingress path
        - path: /
          # -- Ingress path type
          pathType: Prefix
  # -- Ingress TLS configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Container resource requests and limits
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  # -- Enable autoscaling
  enabled: false
  # -- Minimum number of replicas
  minReplicas: 1
  # -- Maximum number of replicas
  maxReplicas: 100
  # -- Target CPU utilization percentage
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Node labels for pod assignment
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity settings for pod assignment
affinity: {}

# Configuration for the altinity-mcp application
config:
  clickhouse:
    host: "localhost"
    port: 8123
    database: "default"
    username: "default"
    password: ""
    protocol: "http"
    read_only: false
    max_execution_time: 30
    limit: 1000
    tls:
      enabled: false
      ca_cert: ""
      client_cert: ""
      client_key: ""
      insecure_skip_verify: false
  
  server:
    transport: "http"
    address: "0.0.0.0"
    port: 8080
    tls:
      enabled: false
      cert_file: ""
      key_file: ""
      ca_cert: ""
    jwe:
      enabled: false
      jwt_secret_key: ""
      jwe_secret_key: ""
      token_param: "token"
  
  logging:
    level: "info"
